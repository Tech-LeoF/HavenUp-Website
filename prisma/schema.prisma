generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Usuario {
  id        Int         @id @default(autoincrement())
  nombre    String      @db.VarChar(100)
  email     String      @unique @db.VarChar(200)
  // otros campos...

  propiedades   Propiedad[]

  // Mensajes
  mensajesEnviados   Mensaje[] @relation("MensajesEnviados")
  mensajesRecibidos  Mensaje[] @relation("MensajesRecibidos")

  // Reseñas
  reseñasRecibidas   Reseña[]  @relation("ReseñasRecibidas")
  reseñasHechas      Reseña[]  @relation("ReseñasHechas")

  @@map("usuarios")
}

model Propiedad {
  id                Int       @id @default(autoincrement())
  usuario_id        Int
  usuario           Usuario   @relation(fields: [usuario_id], references: [id], onDelete: Cascade)
  title             String    @db.VarChar(200)
  descripcion       String?   @db.Text
  price             Decimal   @db.Decimal(12, 2)
  direccion         String?   @db.VarChar(200)
  location          String?   @db.VarChar(100)
  legal_status      String?   @db.VarChar(100)
  pais              String    @default("El Salvador") @db.VarChar(100)
  built_area        Int?
  land_area         Int?
  habitaciones      Int?
  banos             Int?      @map("baños") // Prisma no soporta caracteres especiales en nombres de campos
  property_type     String?   @db.VarChar(50) // casa, apartamento, terreno disponible
  disponible        Boolean   @default(true)
  fecha_publicacion DateTime  @default(now()) @db.Timestamp(6)
  fotos  String[] @db.VarChar(300) // Ej: ["foto1.jpg", "imagen_123.png"]
  videos String[] @db.VarChar(300) // Ej: ["video_intro.mp4", "recorrido_1.mov"]
  document String[] @db.VarChar(300) // Ej: ["document1.jpg", "imagen_123.png"]

  mensajes          Mensaje[]

  @@map("propiedades")
}

model Mensaje {
  id           Int        @id @default(autoincrement())
  remitente_id Int
  remitente    Usuario    @relation("MensajesEnviados", fields: [remitente_id], references: [id], onDelete: Cascade)
  receptor_id  Int
  receptor     Usuario    @relation("MensajesRecibidos", fields: [receptor_id], references: [id], onDelete: Cascade)
  propiedad_id Int
  propiedad    Propiedad  @relation(fields: [propiedad_id], references: [id], onDelete: Cascade)
  mensaje      String     @db.Text
  fecha        DateTime   @default(now()) @db.Timestamp(6)

  @@map("mensajes")
}

model Reseña {
  id           Int      @id @default(autoincrement())
  vendedor_id  Int
  vendedor     Usuario  @relation("ReseñasRecibidas", fields: [vendedor_id], references: [id], onDelete: Cascade)
  comprador_id Int
  comprador    Usuario  @relation("ReseñasHechas", fields: [comprador_id], references: [id], onDelete: Cascade)
  comentario   String?  @db.Text
  calificacion Int
  fecha        DateTime @default(now()) @db.Timestamp(6)

  @@map("reseñas")
}
